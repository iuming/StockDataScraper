name: Simple Stock Data Scraper

on:
  schedule:
    # 每个工作日凌晨2点UTC运行
    - cron: '0 2 * * 1-5'
  workflow_dispatch:
    inputs:
      tickers:
        description: '股票代码（逗号分隔）'
        required: false
        default: 'AAPL,MSFT,GOOGL,TSLA,NVDA'
      start_date:
        description: '开始日期 (YYYY-MM-DD)'
        required: false
        default: '2024-01-01'

# 权限设置
permissions:
  contents: write

jobs:
  scrape-stocks:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check existing data
      id: check_data
      run: |
        if [ -f "stock_data.csv" ]; then
          lines=$(wc -l < stock_data.csv)
          echo "existing_lines=$lines" >> $GITHUB_OUTPUT
          echo "📊 Found existing data with $lines lines"
        else
          echo "existing_lines=0" >> $GITHUB_OUTPUT
          echo "📄 No existing data file found"
        fi

    - name: Run stock scraper
      run: |
        export TICKERS="${{ github.event.inputs.tickers || 'AAPL,MSFT,GOOGL,TSLA,NVDA' }}"
        export START="${{ github.event.inputs.start_date || '2024-01-01' }}"
        
        echo "🚀 Running scraper with TICKERS=$TICKERS, START=$START"
        python scrape_stock_akshare.py

    - name: Check for new data
      id: check_new
      run: |
        if [ -f "stock_data.csv" ]; then
          new_lines=$(wc -l < stock_data.csv)
          old_lines="${{ steps.check_data.outputs.existing_lines }}"
          
          if [ "$new_lines" -gt "$old_lines" ]; then
            echo "has_new_data=true" >> $GITHUB_OUTPUT
            echo "✅ New data detected: $old_lines -> $new_lines lines"
            
            # 生成简单摘要
            echo "📊 Data Summary:" > summary.txt
            echo "- Update time: $(date +'%Y-%m-%d %H:%M:%S UTC')" >> summary.txt
            echo "- Tickers: ${{ github.event.inputs.tickers || 'AAPL,MSFT,GOOGL,TSLA,NVDA' }}" >> summary.txt
            echo "- Total records: $new_lines" >> summary.txt
            echo "- New records: $((new_lines - old_lines))" >> summary.txt
          else
            echo "has_new_data=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No new data to commit"
          fi
        else
          echo "has_new_data=false" >> $GITHUB_OUTPUT
          echo "❌ No CSV file generated"
        fi

    - name: Commit and push changes
      if: steps.check_new.outputs.has_new_data == 'true'
      run: |
        git config --local user.email "6ming@hrbeu.edu.cn"
        git config --local user.name "iuming"
        
        # 添加文件
        git add stock_data.csv
        
        # 创建提交信息
        commit_msg="📊 Auto-update stock data - $(date +'%Y-%m-%d')"
        if [ -f "summary.txt" ]; then
          commit_msg="$commit_msg

$(cat summary.txt)"
        fi
        
        git commit -m "$commit_msg"
        git push

    - name: Upload artifacts on success
      if: steps.check_new.outputs.has_new_data == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: updated-data-${{ github.run_number }}
        path: |
          stock_data.csv
          summary.txt
        retention-days: 5

    - name: Log failure details
      if: failure()
      run: |
        echo "❌ Workflow failed. Common issues:"
        echo "1. Check if akshare is working properly"
        echo "2. Verify network connectivity" 
        echo "3. Check stock ticker symbols"
        echo "4. Review repository permissions"
        
        # 检查文件状态
        if [ -f "stock_data.csv" ]; then
          echo "📄 CSV file exists with $(wc -l < stock_data.csv) lines"
        else
          echo "📄 No CSV file found"
        fi
